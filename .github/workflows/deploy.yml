name: Deploy Django Application

on:
  push:
    branches: [ 'main' ]
  workflow_dispatch:

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: python manage.py test

    - name: Extract commit hash
      id: vars
      run: echo "commit=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    # The key issue is here - We need to properly scan the host
    - name: Setup SSH known_hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_HOST }} $(ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} 2>/dev/null)" >> ~/.ssh/known_hosts

    - name: Deploy to server
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        COMMIT_HASH: ${{ steps.vars.outputs.commit }}
      run: |
        echo "Deploying to server at $SSH_HOST as user $SSH_USER"
        ssh $SSH_USER@$SSH_HOST "mkdir -p /home/$SSH_USER/django-app"
        ssh $SSH_USER@$SSH_HOST "echo 'Deployment directory ready'"
        ssh $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/django-app && echo 'Current directory: $(pwd)'"
        
        # Clone or pull the repository
        ssh $SSH_USER@$SSH_HOST "if [ -d '/home/$SSH_USER/django-app/.git' ]; then \
          cd /home/$SSH_USER/django-app && git pull; \
        else \
          git clone https://github.com/yourusername/django-gh-actions.git /home/$SSH_USER/django-app; \
        fi"
        
        # Setup virtual environment if it doesn't exist
        ssh $SSH_USER@$SSH_USER "if [ ! -d '/home/$SSH_USER/django-app/venv' ]; then \
          cd /home/$SSH_USER/django-app && python3 -m venv venv; \
        fi"
        
        # Install requirements and run migrations
        ssh $SSH_USER@$SSH_HOST "cd /home/$SSH_USER/django-app && \
          source venv/bin/activate && \
          pip install -r requirements.txt && \
          python manage.py migrate && \
          python manage.py collectstatic --noinput && \
          echo 'Deployed commit: $COMMIT_HASH'"
