name: CI/CD Pipeline

on:
  # push:
  #   branches: [ 'main' ]
  # pull_request:
  #   branches: [ 'main' ]
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0'  # Every Sunday at midnight UTC

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8

    - name: Run linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

    # Cache dependencies for next jobs
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

  test:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
      
    # Restore cached dependencies
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
      
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install coverage
      
    - name: Run tests with coverage
      run: |
        coverage run --source='.' manage.py test
        coverage report

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy from main branch
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Extract commit hash
      id: vars
      run: echo "commit=${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -t rsa ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to server
      env:
        SSH_USER: ${{ secrets.SSH_USER }}
        SSH_HOST: ${{ secrets.SSH_HOST }}
        COMMIT_HASH: ${{ steps.vars.outputs.commit }}
      run: |
        ssh $SSH_USER@$SSH_HOST "cd /var/www/django-app/app && \
        git pull && \
        /var/www/django-app/venv/bin/pip install -r requirements.txt && \
        /var/www/django-app/venv/bin/python manage.py migrate && \
        /var/www/django-app/venv/bin/python manage.py collectstatic --noinput && \
        sudo supervisorctl restart django-app && \
        echo 'Deployed commit: $COMMIT_HASH'"